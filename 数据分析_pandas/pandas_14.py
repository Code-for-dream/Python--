#!/usr/bin/env python
#!-*-coding:utf-8 -*-
#!@Time:2020/6/17 10:23
#!@Author: zyx
#!@File: .py
import numpy as np
import pandas as pd
from matplotlib import pyplot as plt
from matplotlib import font_manager

#设置中文
my_font = font_manager.FontProperties(fname="C:\Windows\Fonts\STXINGKA.TTF",size=18)

#读取csv文件
file_path = "911-calls/911.csv"
df = pd.read_csv(file_path)

df["timeStamp"] = pd.to_datetime(df["timeStamp"]) #将timeStamp转化为时间戳
df.set_index("timeStamp",inplace=True) #将timeStamp定义为索引

print(df)
#                            lat  ...  e
# timeStamp                       ...
# 2015-12-10 17:10:52  40.297876  ...  1
# 2015-12-10 17:29:21  40.258061  ...  1
# 2015-12-10 14:39:21  40.121182  ...  1
# 2015-12-10 16:47:36  40.116153  ...  1
# 2015-12-10 16:56:52  40.251492  ...  1
#                         ...  ... ..
# 2020-06-08 13:07:24  40.136020  ...  1
# 2020-06-08 13:10:11  40.172526  ...  1
# 2020-06-08 13:10:41  40.125814  ...  1
# 2020-06-08 13:11:45  40.197947  ...  1
# 2020-06-08 13:14:43  40.140505  ...  1
# [645716 rows x 8 columns]

#统计出911紧急拨号数据中不同月份的电话的次数
count_by_month = df.resample("M").count()["title"]
print(count_by_month)
#               lat    lng   desc    zip  title    twp   addr      e
# timeStamp
# 2015-12-31   7916   7916   7916   6902   7916   7911   7916   7916
# 2016-01-31  13096  13096  13096  11512  13096  13094  13096  13096
# 2016-02-29  11396  11396  11396   9926  11396  11395  11396  11396
# 2016-03-31  11059  11059  11059   9754  11059  11052  11059  11059
# 2016-04-30  11287  11287  11287   9897  11287  11284  11287  11287
# 2016-05-31  11374  11374  11374   9938  11374  11371  11374  11374
# 2016-06-30  11732  11732  11732  10205  11732  11726  11732  11732
# 2016-07-31  12088  12088  12088  10626  12088  12086  12088  12088
# 2016-08-31  11904  11904  11904  10381  11904  11902  11904  11904
# 2016-09-30  11669  11669  11669  10174  11669  11666  11669  11669
# 2016-10-31  12502  12502  12502  10760  12502  12499  12502  12502
# 2016-11-30  12091  12091  12091  10559  12091  12086  12091  12091
# 2016-12-31  12162  12162  12162  10763  12162  12156  12162  12162
# 2017-01-31  11605  11605  11605  10365  11605  11598  11605  11605
# 2017-02-28  10267  10267  10267   9235  10267  10263  10267  10267
# 2017-03-31  11684  11684  11684  10406  11684  11680  11684  11684
# 2017-04-30  11056  11056  11056   9774  11056  11052  11056  11056
# 2017-05-31  11719  11719  11719  10316  11719  11711  11719  11719
# 2017-06-30  12333  12333  12333  10865  12333  12332  12333  12333
# 2017-07-31  11768  11768  11768  10314  11768  11764  11768  11768
# 2017-08-31  11753  11753  11753  10358  11753  11744  11753  11753
# 2017-09-30  11332  11332  11332   9840  11332  11327  11332  11332
# 2017-10-31  12337  12337  12337  10816  12337  12336  12337  12337
# 2017-11-30  11548  11548  11548  10168  11548  11543  11548  11548
# 2017-12-31  12941  12941  12941  11311  12941  12938  12941  12941
# 2018-01-31  13123  13123  13123  11603  13123  13120  13123  13123
# 2018-02-28  11165  11165  11165   9802  11165  11159  11165  11165
# 2018-03-31  14923  14923  14923  13256  14923  14919  14923  14923
# 2018-04-30  11240  11240  11240   9817  11240  11239  11240  11240
# 2018-05-31  12551  12551  12551  10860  12551  12546  12551  12551
# 2018-06-30  12106  12106  12106  10431  12106  12094  12106  12106
# 2018-07-31  12549  12549  12549  10923  12549  12541  12549  12549
# 2018-08-31  12315  12315  12315  10773  12315  12311  12315  12315
# 2018-09-30  12338  12338  12338  10758  12338  12332  12338  12338
# 2018-10-31  12976  12976  12976  11343  12976  12974  12976  12976
# 2018-11-30  14097  14097  14097  12401  14097  14089  14097  14097
# 2018-12-31  12144  12144  12144  10638  12144  12139  12144  12144
# 2019-01-31  12304  12304  12304  10898  12304  12298  12304  12304
# 2019-02-28  11556  11556  11556  10137  11556  11552  11556  11556
# 2019-03-31  12441  12441  12441  10928  12441  12436  12441  12441
# 2019-04-30  11845  11845  11845  10322  11845  11839  11845  11845
# 2019-05-31  12823  12823  12823  11143  12823  12815  12823  12823
# 2019-06-30  12322  12322  12322  10722  12322  12314  12322  12322
# 2019-07-31  13166  13166  13166  11542  13166  13159  13166  13166
# 2019-08-31  12387  12387  12387  10799  12387  12378  12387  12387
# 2019-09-30  11874  11874  11874  10517  11874  11871  11874  11874
# 2019-10-31  13425  13425  13425  11663  13425  13411  13425  13425
# 2019-11-30  12446  12446  12446  10959  12446  12439  12446  12446
# 2019-12-31  12529  12529  12529  11169  12529  12523  12529  12529
# 2020-01-31  12208  12208  12208  10916  12208  12202  12208  12208
# 2020-02-29  11043  11043  11043   9822  11043  11036  11043  11043
# 2020-03-31   9920   9920   9920   8908   9920   9914   9920   9920
# 2020-04-30   8243   8243   8243   7539   8243   8241   8243   8243
# 2020-05-31   9042   9042   9042   8097   9042   9031   9042   9042
# 2020-06-30   3996   3996   3996   3642   3996   3996   3996   3996

#画图
_x = count_by_month.index
_y = count_by_month.values

#查看当前dataframe的方法
# for i in _x:
#     print(dir(i))
#     break
#['__add__', '__array_priority__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__',
# '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__',
# '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__pyx_vtable__',
# '__radd__', '__reduce__', '__reduce_ex__', '__repr__', '__rsub__', '__setattr__', '__setstate__',
# '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__weakref__', '_date_attributes',
# '_date_repr', '_get_date_name_field', '_get_start_end_field', '_has_time_component', '_repr_base',
# '_round', '_short_repr', '_time_repr', 'asm8', 'astimezone', 'ceil', 'combine', 'ctime', 'date',
# 'day', 'day_name', 'dayofweek', 'dayofyear', 'days_in_month', 'daysinmonth', 'dst', 'floor', 'fold',
# 'freq', 'freqstr', 'fromisoformat', 'fromordinal', 'fromtimestamp', 'hour', 'is_leap_year',
# 'is_month_end', 'is_month_start', 'is_quarter_end', 'is_quarter_start', 'is_year_end',
# 'is_year_start', 'isocalendar', 'isoformat', 'isoweekday', 'max', 'microsecond', 'min', 'minute',
# 'month', 'month_name', 'nanosecond', 'normalize', 'now', 'quarter', 'replace', 'resolution', 'round',
# 'second', 'strftime', 'strptime', 'time', 'timestamp', 'timetuple', 'timetz', 'to_datetime64',
# 'to_julian_date', 'to_numpy', 'to_period', 'to_pydatetime', 'today', 'toordinal', 'tz', 'tz_convert',
# 'tz_localize', 'tzinfo', 'tzname', 'utcfromtimestamp', 'utcnow', 'utcoffset', 'utctimetuple', 'value',
# 'week', 'weekday', 'weekofyear', 'year']

_x = [i.strftime("%Y%m%d") for i in _x]

#设置图像大小
plt.figure(figsize=(20,8),dpi=80)

#绘图
plt.plot(range(len(_x)),_y)
plt.xticks(range(len(_x)),_x,rotation=45)
plt.xlabel("年/月/日",fontproperties=my_font)
plt.ylabel("次数",fontproperties=my_font)
plt.title("911紧急拨号数据中不同月份的电话的次数",fontproperties=my_font)

#设置网格
plt.grid(True,linestyle="-.",alpha=0.3)

#展示
plt.show()

